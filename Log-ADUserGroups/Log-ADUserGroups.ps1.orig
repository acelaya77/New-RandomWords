Function Log-ADUserGroups{
[CmdletBinding()]

Param(
    [Parameter(Mandatory=$true)]
    [Alias('userName')]
    [string]$strUser
)
    $groups = $null
    $user = Get-ADUser -Identity $strUser -Properties Memberof,DisplayName,CanonicalName,ScriptPath,HomeDrive,HomeDirectory,ProxyAddresses
    $file = "\\sdofs1-08e\is`$\Security Group Logs\$($user.SAMACCOUNTNAME)-$(get-date -f 'yyyyMMdd-hhmmss').txt"

    $SamAccountName = "$($user.SamAccountName)"
    $DisplayName = "$($user.DisplayName)"
    $CanonicalName = "$($user.CanonicalName)"
    $homeDrive = "$($user.HomeDrive)"
    $homePath = "$($user.HomeDirectory)"
    $script = "$($user.ScriptPath)"
    if(($user.ProxyAddresses -ne $null)){
        $ProxyAddresses = [string]::join("`n                 ",(($user.ProxyAddresses | ?{$_ -match "smtp:*"}).ToLower().Replace('smtp:','')))
    }
    Else{
        $ProxyAddresses = [string]::("`n                 ")
    }

    $header = @"
********************************************************************************
Date:            $(get-date -f 'yyyy/MM/dd hh:mm:ss')
Tech:            $($env:USERNAME)
Name:            $($user.DisplayName)
SamAccountName:  $($user.sAMAccountName)
AD Location:     $($user.CanonicalName)
Logon Script:    $($user.ScriptPath)
Home Drive:      $($user.HomeDrive)
Home Directory:  $($user.HomeDirectory)
ProxyAddresses:  $ProxyAddresses
********************************************************************************

Security Groups:
"@
    <# Removed: 12/12/2016, depricated for the here-string that precedes

    #"Group Membership for $DisplayName ($SamAccountName) as of $(get-date -f 'yyyy/MM/dd hh:mm:ss')" | Out-File -FilePath $file
    "Date: $(get-date -f 'yyyy/MM/dd hh:mm:ss')" | Out-File -FilePath $file
    "Name: $DisplayName" | Out-File -FilePath $file -Append
    "SamAccountName: $SamAccountName" | Out-File -FilePath $file -Append
    
    #12/12/2016: Added to document original account object location, Logon Script, Home path and home directory within AD
    "Account location: $CanonicalName" | Out-File -FilePath $file -Append
    "Logon Script: $script" | Out-File -FilePath $file -Append
    "Home Drive: $homeDrive" | Out-File -FilePath $file -Append
    "Home Path: $homePath" | Out-File -FilePath $file -Append
    #>
    $header + "`r`n" > $file

    #$groups = Get-ADPrincipalGroupMembership -Identity "$this"
    $groups = $user.memberof
    $groups = $groups | Get-ADObject | sort Name -Unique
    $counter = 0
    foreach($group in $groups){
        #$counter++
        #Write-Progress -Activity "Removing Groups" -Status "$($counter): Removing group $($group.Name)" -PercentComplete ($counter/$groups.count*100)
        #$($group.Name) | Out-File -FilePath $file -Append
        $($group.name) | Out-File -FilePath $file -Append
    } #end foreach()

    ii $file
}